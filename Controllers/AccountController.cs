using System.Diagnostics;
using System.Web.Mvc;
using Emarket.ViewModels.Account;
using Emarket.DataAccessLayer;
using System.Net.Mail;

namespace Emarket.Controllers
{
    public class AccountController : Controller
    {
        private readonly AccountDBManager accountDBManager;

        public AccountController()
        {
            accountDBManager = new AccountDBManager();
        }

        public ActionResult SignIn()
        {
            return View();
        }

        [HttpPost]
        public ActionResult SignIn(SignInViewModel credentials)
        {
            if (accountDBManager.VerifiedTheCredentialsAreCorrect(credentials.Username, credentials.Password))
            {
                // set session
                return View("~/Views/Products/Index.cshtml");
            }

            // not beautiful but in early summer 2018 i was a noob:
            // i think "the best way" (or at least a more beatiful one...) to make this functionality it's to create
            // a standalone page used only for communication messages (a communication messages could be an object of
            // a class that implements an interface...)
            ViewBag.communication = "your credentials are not correct";
            return View();
        }

        public ActionResult SignUp()
        {
            return View();
        }

        [HttpPost]
        public ActionResult SignUp(SignUpViewModel newAccountData)
        {
            if (ModelState.IsValid)
            {
                string autoGeneratedUsername = accountDBManager.SignUpNewUser(newAccountData);

                // see comment in SigIn ViewBag assignment
                ViewBag.communication = "your username is: " + autoGeneratedUsername;
            }
            else
            {
                ViewBag.communication = "your credentials are not correct";
            }

            return View("SignIn");
        }

        public ActionResult RecoverPassword()
        {
            return View();
        }

        [HttpPost]
        public ActionResult RecoverPassword(RecoverPasswordViewModel credentials)
        {
            if (accountDBManager.VerifiedTheCredentialsAreCorrect(credentials))
            {
                SendMail(credentials.Email, accountDBManager.GetUserPasswordBy(credentials.Username));
            }
            else
            {
                ViewBag.communication = "your credentials are not correct";
            }
            
            return View("SignIn");
        }

        private void SendMail(string email, string lostPassword)
        {
            ViewBag.communication = "it's very hard to implement that locally";
        }

        public ActionResult ChangePassword()
        {
            return View();
        }
        
        [HttpPost]
        public ActionResult ChangePassword(ChangePasswordViewModel accountDataNeeded)
        {
            if (accountDBManager.VerifiedTheCredentialsAreCorrect(accountDataNeeded.Username, accountDataNeeded.Password)
                && ModelState.IsValid
                )
            {
                accountDBManager.ChangePassword(accountDataNeeded);

                ViewBag.communication = "your password has been updated";
            }
            else
            {
                ViewBag.communication = "your credentials are not correct";
            }

            return View("SignIn");
        }
    }
}